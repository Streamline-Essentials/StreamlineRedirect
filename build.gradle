plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'io.freefair.lombok' version '8.6'
}

group properties['group']
version properties['version']

repositories {
    mavenCentral()
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    maven { url = 'https://jitpack.io' }
}

dependencies {
    // LuckPerms
    compileOnly 'net.luckperms:api:5.4'

    // StreamlineCore
    compileOnly 'com.github.Streamline-Essentials.StreamlineCore:StreamlineCore-API:master-SNAPSHOT'
    annotationProcessor 'com.github.Streamline-Essentials.StreamlineCore:StreamlineCore-API:master-SNAPSHOT'

    if (properties['include-bapi']) {
        compileOnly 'com.github.Streamline-Essentials.StreamlineCore:StreamlineCore-BAPI:master-SNAPSHOT'
        annotationProcessor 'com.github.Streamline-Essentials.StreamlineCore:StreamlineCore-BAPI:master-SNAPSHOT'
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

shadowJar {
    manifest {
        attributes 'Plugin-Class': rootProject.properties['pf.class'].toString() + '.' + rootProject.name.toString()
        attributes 'Plugin-Id': rootProject.properties['pf.id'].toString()
        attributes 'Plugin-Version': rootProject.version.toString()
        attributes 'Plugin-Requires': ( rootProject.properties['pf.requires'].toString() == 'none' ? '' : rootProject.properties['pf.requires'].toString() )
        attributes 'Plugin-Dependencies': ( rootProject.properties['pf.dependencies'].toString() == 'none' ? '' : rootProject.properties['pf.dependencies'].toString() )
        attributes 'Plugin-Description': rootProject.properties['pf.description'].toString()
        attributes 'Plugin-Provider': rootProject.properties['pf.provider'].toString()
        attributes 'Plugin-License': rootProject.properties['pf.license'].toString()
    }

    setArchiveFileName(archiveBaseName.get() + '-' + archiveVersion.get() + '.' + archiveExtension.get())
}

artifacts {
    archives shadowJar
}

wrapper {
    gradleVersion = '8.6'
    distributionType = Wrapper.DistributionType.BIN
}